Exercise 4: Functions

* Scenario 1: Calculate age of customers.

CREATE OR REPLACE FUNCTION CalculateAge (
    p_DateOfBirth IN DATE
) RETURN NUMBER IS
    v_Age NUMBER;
BEGIN
    v_Age := TRUNC((SYSDATE - p_DateOfBirth) / 365.25);
    RETURN v_Age;
END;

* Scenario 2: Calculate monthly installment for a loan.

CREATE OR REPLACE FUNCTION CalculateMonthlyInstallment (
    p_LoanAmount IN NUMBER,
    p_InterestRate IN NUMBER,
    p_LoanDurationYears IN NUMBER
) RETURN NUMBER IS
    v_MonthlyRate NUMBER;
    v_NumPayments NUMBER;
    v_MonthlyInstallment NUMBER;
BEGIN
    v_MonthlyRate := p_InterestRate / 1200;
    v_NumPayments := p_LoanDurationYears * 12;
    v_MonthlyInstallment := p_LoanAmount * v_MonthlyRate / (1 - POWER(1 + v_MonthlyRate, -v_NumPayments));
    RETURN v_MonthlyInstallment;
END; 

* Scenario 3: Check sufficient balance before transaction.

CREATE OR REPLACE FUNCTION HasSufficientBalance (
    p_AccountID IN NUMBER,
    p_Amount IN NUMBER
) RETURN BOOLEAN IS
    v_Balance NUMBER;
BEGIN
    SELECT Balance INTO v_Balance FROM Accounts WHERE AccountID = p_AccountID;
    RETURN v_Balance >= p_Amount;
END;
